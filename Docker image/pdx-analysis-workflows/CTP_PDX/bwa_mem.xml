<tool id="bwa_mem_align" name="BWA-MEM Alignment" version="1.0.0">
    <description>tool</description>
    <requirements>
        <requirement type="package" version="0.7.17">bwa</requirement>
        <requirement type="package" version="0.7.15">bwakit</requirement>
        <requirement type="package" version="1.3">seqtk</requirement>
        <requirement type="package" version="1.3">samtools</requirement>
    </requirements>
    <command detect_errors="exit_code">
        <![CDATA[
            #if $input.type == "paired_collection"
                ln -s "${input.in_1.forward}" sample.fq
                && python3 '${__tool_directory__}/bin/read_group_from_fastq.py' sample.fq "${input.in_1.element_identifier}" read_group
                && python3 '${__tool_directory__}/bin/bwa_mem.py' "$in_3" "${input.in_1.forward}" "${input.in_1.reverse}" "paired"
                && samtools sort -o aln.sorted.bam aln.bam
                && samtools index aln.sorted.bam
                && ls -lrth > files.txt
            #else if $input.type == "paired_dataset"
                ln -s "$input.in_1" sample.fq
                && python3 '${__tool_directory__}/bin/read_group_from_fastq.py' sample.fq sample-01 read_group
                && python3 '${__tool_directory__}/bin/bwa_mem.py' "$in_3" ${input.in_1} ${input.in_2} "paired"
                && samtools sort -o aln.sorted.bam aln.bam
                && samtools index aln.sorted.bam
	    #else if $input.type == "single_collection"
                ln -s "${input.list.graft}" sample.fq
                && python3 '${__tool_directory__}/bin/read_group_from_fastq.py' sample.fq "${input.list.element_identifier}" read_group
                && python3 '${__tool_directory__}/bin/bwa_mem.py' "$in_3" "${input.list.graft}" "none" "single"
                && samtools sort -o aln.sorted.bam aln.bam
                && samtools index aln.sorted.bam
                && ls -lrth > files.txt
	    #else
                ln -s "$input.in_1" sample.fq
                && python3 '${__tool_directory__}/bin/read_group_from_fastq.py' sample.fq sample-01 read_group
                && python3 '${__tool_directory__}/bin/bwa_mem.py' "$in_3" ${input.in_1} "none" "single"
                && samtools sort -o aln.sorted.bam aln.bam
                && samtools index aln.sorted.bam
	    #end if
        ]]>
    </command>
    <inputs>
        <conditional name="input">
            <param name="type" type="select" label="Input Type">
                <option value="single_dataset">Single Dataset (single-end)</option>
		<option value="paired_dataset">Paired Dataset (paired-end)</option>
		<option value="single_collection">Single-end Collection (Multiple Single-end Samples)</option>
		<option value="paired_collection" selected="true">Paired-end Collection (Multiple Paired-end Samples)</option>
            </param>
            <when value="paired_dataset">
                <param format="fastq" name="in_1" type="data" label="Human Reads Dataset 1"
                       help="This dataset is generated by Xenome Extract Human Reads tool."/>
                <param format="fastq" name="in_2" type="data" label="Human Reads Dataset 2"
                       help="This dataset is generated by Xenome Extract Human Reads tool."/>
            </when>
            <when value="paired_collection">
                <param name="in_1" format="fastqsanger" type="data_collection" collection_type="paired"
                       label="Select Human Reads Paired Collection"
                       help="Specify human reads paired dataset collection containing paired reads"/>
            </when>
    	    <when value="single_dataset">
                <param format="fastq" name="in_1" type="data" label="Human Reads Dataset 1"
                       help="This dataset is generated by Xenome Extract Human Reads tool."/>
            </when>
            <when value="single_collection">
                <param name="list" type="data_collection" collection_type="list" multiple="True"
                       label="Select Human Reads Paired Collection"
                       help="Specify human reads paired dataset collection containing paired reads"/>
            </when>
        </conditional>
        <param format="txt" name="in_3" type="hidden" label="bwa-index" value="/galaxy/reference-data/bwa-index/ucsc_idx_pfx"/>
    </inputs>
    <outputs>
        <data name="out_1" format="bam" from_work_dir="aln.sorted.bam" label="BWA-Mem Alignment Result">
            <filter>input['type'] == 'paired_dataset' or input['type'] == 'single_dataset'</filter>
        </data>
        <collection name="list_output" type="list" label="BWA-Mem Alignment Result">
            <data name="sortedbam" format="bam" from_work_dir="aln.sorted.bam" hidden="true"/>
            <data name="files_list" format="tabular" from_work_dir="files.txt" hidden="true"/>
            <filter>input['type'] == 'paired_collection' or input['type'] == 'single_collection'</filter>
        </collection>
    </outputs>

    <help>
        First process a fastq file to extract read group information with read_group_from_fastq.py. Then align a pair of fastq files. Any quality checking and trimming must be done before this step. Please note, you must have run RSEM Prepare Reference tool with this reference name before running this tool.

        This tool has following input and output dataset/collections.

        Inputs:

        1) Input Type:

            Paired Collection (Multiple Paired Samples): Human Reads Paired Collection. Generated by Xenome Extract Human Reads tool.

            Single Dataset (Paired reads from one sample): Human Reads Dataset One and Two. Generated by Xenome Extract Human Reads tool.

        Outputs:

        Based on the input selection, one of the following will be output.

        1) List Collection (Multiple Samples): BWA-Mem Alignment Result.

        2) One Dataset (One sample): BWA-Mem Alignment Result.
    </help>
</tool>
